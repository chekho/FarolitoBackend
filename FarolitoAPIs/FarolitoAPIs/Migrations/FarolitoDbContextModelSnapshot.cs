// <auto-generated />
using System;
using FarolitoAPIs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FarolitoAPIs.Migrations
{
    [DbContext(typeof(FarolitoDbContext))]
    partial class FarolitoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FarolitoAPIs.Models.Carrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("RecetaId")
                        .HasColumnType("int")
                        .HasColumnName("Receta_id");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PK__carrito__3213E83F2DD1F388");

                    b.HasIndex("RecetaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("carrito", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Comentarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(700)
                        .IsUnicode(false)
                        .HasColumnType("varchar(700)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK__comenta__3211E83F8B12441A");

                    b.HasIndex("UsuarioId");

                    b.ToTable("comentarios", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Componente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombre");

                    b.Property<bool?>("estatus")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK__componen__3213E83F2A28E243");

                    b.ToTable("componentes", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Componentesrecetum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("ComponentesId")
                        .HasColumnType("int")
                        .HasColumnName("componentes_id");

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.Property<int>("RecetaId")
                        .HasColumnType("int")
                        .HasColumnName("receta_id");

                    b.HasKey("Id")
                        .HasName("PK__componen__3213E83F6B05387A");

                    b.HasIndex("ComponentesId")
                        .HasDatabaseName("IX_Componentesreceta_ComponentesId");

                    b.HasIndex("RecetaId")
                        .HasDatabaseName("IX_Componentesreceta_RecetaId");

                    b.ToTable("componentesreceta", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PK__compra__3213E83FF831483C");

                    b.HasIndex("UsuarioId");

                    b.ToTable("compra", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Detallecompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("CompraId")
                        .HasColumnType("int")
                        .HasColumnName("compra_id");

                    b.Property<double?>("Costo")
                        .HasColumnType("float")
                        .HasColumnName("costo");

                    b.Property<string>("Lote")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lote");

                    b.HasKey("Id")
                        .HasName("PK__detallec__3213E83FD7591EEC");

                    b.HasIndex("CompraId");

                    b.HasIndex("Costo", "Cantidad")
                        .HasDatabaseName("IX_Detallecompra_Costo_Cantidad");

                    b.ToTable("detallecompra", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Detalleproduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InventariocomponentesId")
                        .HasColumnType("int")
                        .HasColumnName("inventariocomponentes_id");

                    b.Property<int>("ProduccionId")
                        .HasColumnType("int")
                        .HasColumnName("produccion_id");

                    b.HasKey("Id")
                        .HasName("PK__detallep__3213E83FBE6428E3");

                    b.HasIndex("InventariocomponentesId");

                    b.HasIndex("ProduccionId");

                    b.ToTable("detalleproduccion", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Detalleventum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("InventariolamparaId")
                        .HasColumnType("int")
                        .HasColumnName("inventariolampara_id");

                    b.Property<double?>("PrecioUnitario")
                        .HasColumnType("float")
                        .HasColumnName("precioUnitario");

                    b.Property<int>("VentaId")
                        .HasColumnType("int")
                        .HasColumnName("venta_id");

                    b.HasKey("Id")
                        .HasName("PK__detallev__3213E83F3EC3A025");

                    b.HasIndex("InventariolamparaId");

                    b.HasIndex("VentaId");

                    b.ToTable("detalleventa", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.HistorialComunicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccionRealizada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("accion_realizada");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PK_HistorialComunicacion");

                    b.HasIndex("UsuarioId");

                    b.ToTable("historial_comunicacion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccionRealizada = "Carrito abandonado",
                            Fecha = new DateTime(2024, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "28"
                        },
                        new
                        {
                            Id = 2,
                            AccionRealizada = "Carrito abandonado",
                            Fecha = new DateTime(2024, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "29"
                        },
                        new
                        {
                            Id = 3,
                            AccionRealizada = "Carrito abandonado",
                            Fecha = new DateTime(2024, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "30"
                        },
                        new
                        {
                            Id = 4,
                            AccionRealizada = "Carrito abandonado",
                            Fecha = new DateTime(2024, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "31"
                        },
                        new
                        {
                            Id = 5,
                            AccionRealizada = "Estado de compra modificado",
                            Fecha = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "33"
                        },
                        new
                        {
                            Id = 6,
                            AccionRealizada = "Estado de compra modificado",
                            Fecha = new DateTime(2024, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "34"
                        },
                        new
                        {
                            Id = 7,
                            AccionRealizada = "Compra finalizada",
                            Fecha = new DateTime(2024, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "35"
                        },
                        new
                        {
                            Id = 8,
                            AccionRealizada = "Compra finalizada",
                            Fecha = new DateTime(2024, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "36"
                        },
                        new
                        {
                            Id = 9,
                            AccionRealizada = "Nueva compra",
                            Fecha = new DateTime(2024, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "37"
                        },
                        new
                        {
                            Id = 10,
                            AccionRealizada = "Recuperación de contraseña",
                            Fecha = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "6"
                        },
                        new
                        {
                            Id = 11,
                            AccionRealizada = "Carrito abandonado",
                            Fecha = new DateTime(2024, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "8"
                        },
                        new
                        {
                            Id = 12,
                            AccionRealizada = "Estado de compra modificado",
                            Fecha = new DateTime(2024, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "9"
                        },
                        new
                        {
                            Id = 13,
                            AccionRealizada = "Compra finalizada",
                            Fecha = new DateTime(2024, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "28"
                        },
                        new
                        {
                            Id = 14,
                            AccionRealizada = "Compra finalizada",
                            Fecha = new DateTime(2024, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "29"
                        },
                        new
                        {
                            Id = 15,
                            AccionRealizada = "Carrito abandonado",
                            Fecha = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "30"
                        },
                        new
                        {
                            Id = 16,
                            AccionRealizada = "Estado de compra modificado",
                            Fecha = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "31"
                        },
                        new
                        {
                            Id = 17,
                            AccionRealizada = "Nueva compra",
                            Fecha = new DateTime(2024, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "33"
                        },
                        new
                        {
                            Id = 18,
                            AccionRealizada = "Recuperación de contraseña",
                            Fecha = new DateTime(2024, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "34"
                        },
                        new
                        {
                            Id = 19,
                            AccionRealizada = "Estado de compra modificado",
                            Fecha = new DateTime(2024, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "35"
                        },
                        new
                        {
                            Id = 20,
                            AccionRealizada = "Compra finalizada",
                            Fecha = new DateTime(2024, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = "36"
                        });
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Inventariocomponente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("ComponentesId")
                        .HasColumnType("int")
                        .HasColumnName("componentes_id");

                    b.Property<int>("DetallecompraId")
                        .HasColumnType("int")
                        .HasColumnName("detallecompra_id");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int")
                        .HasColumnName("proveedor_id");

                    b.HasKey("Id")
                        .HasName("PK__inventar__3213E83F20726ABE");

                    b.HasIndex("ComponentesId");

                    b.HasIndex("DetallecompraId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("inventariocomponentes", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Inventariolampara", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<DateOnly?>("FechaCreacion")
                        .HasColumnType("date")
                        .HasColumnName("fechaCreacion");

                    b.Property<string>("Lote")
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("lote");

                    b.Property<double?>("Precio")
                        .HasColumnType("float")
                        .HasColumnName("precio");

                    b.Property<int>("ProduccionId")
                        .HasColumnType("int")
                        .HasColumnName("produccion_id");

                    b.Property<int>("RecetaId")
                        .HasColumnType("int")
                        .HasColumnName("receta_id");

                    b.HasKey("Id")
                        .HasName("PK__inventar__3213E83FB2AFE4ED");

                    b.HasIndex("ProduccionId");

                    b.HasIndex("RecetaId");

                    b.ToTable("inventariolampara", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Logs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cambio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModuloId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ModuloId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Mermacomponente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(700)
                        .IsUnicode(false)
                        .HasColumnType("varchar(700)")
                        .HasColumnName("descripcion");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int>("InventariocomponentesId")
                        .HasColumnType("int")
                        .HasColumnName("inventariocomponentes_id");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PK__mermacom__3213E83F92DF7402");

                    b.HasIndex("InventariocomponentesId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("mermacomponentes", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Mermalampara", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(700)
                        .IsUnicode(false)
                        .HasColumnType("varchar(700)")
                        .HasColumnName("descripcion");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int>("InventariolamparaId")
                        .HasColumnType("int")
                        .HasColumnName("inventariolampara_id");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PK__mermalam__3213E83F375D789B");

                    b.HasIndex("InventariolamparaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("mermalampara", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Modulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Produccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Costo")
                        .HasColumnType("float")
                        .HasColumnName("costo");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int>("SolicitudproduccionId")
                        .HasColumnType("int")
                        .HasColumnName("solicitudproduccion_id");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PK__producci__3213E83F59DE05A4");

                    b.HasIndex("SolicitudproduccionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("produccion", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Productoproveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComponentesId")
                        .HasColumnType("int")
                        .HasColumnName("componentes_id");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int")
                        .HasColumnName("proveedor_id");

                    b.HasKey("Id")
                        .HasName("PK__producto__3213E83F233E46C0");

                    b.HasIndex("ComponentesId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("productoproveedor", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoM")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("apellidoM");

                    b.Property<string>("ApellidoP")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("apellidoP");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("dirección");

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.Property<string>("NombreAtiende")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreAtiende");

                    b.Property<string>("NombreEmpresa")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreEmpresa");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("teléfono");

                    b.HasKey("Id")
                        .HasName("PK__proveedo__3213E83F3984A0AA");

                    b.ToTable("proveedor", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Recetum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombrelampara")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombrelampara");

                    b.HasKey("Id")
                        .HasName("PK__receta__3213E83F99B7B827");

                    b.HasIndex("Estatus")
                        .HasDatabaseName("IX_Receta_Estatus");

                    b.HasIndex("Id")
                        .HasDatabaseName("IX_Receta_Id ");

                    b.HasIndex("Nombrelampara")
                        .HasDatabaseName("IX_Receta_Nombrelampara ");

                    b.ToTable("receta", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Solicitudproduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Estatus")
                        .HasColumnType("int")
                        .HasColumnName("estatus");

                    b.Property<int>("RecetaId")
                        .HasColumnType("int")
                        .HasColumnName("receta_id");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PK__solicitu__3213E83FC8353465");

                    b.HasIndex("RecetaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("solicitudproduccion", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tarjeta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("urlImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__usuario__3213E83F9E559931");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Ventum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Descuento")
                        .HasColumnType("float")
                        .HasColumnName("descuento");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("Folio")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("folio");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PK__venta__3213E83F96EBBD9A");

                    b.HasIndex("UsuarioId");

                    b.ToTable("venta", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("estatus");

                    b.Property<DateOnly?>("FechaEntrega")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaEnvio")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaPedido")
                        .HasColumnType("date");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("VentumId")
                        .HasColumnType("int")
                        .HasColumnName("venta_id");

                    b.HasKey("Id")
                        .HasName("PK__pedido__3213E83F40684E8F");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("VentumId")
                        .IsUnique();

                    b.ToTable("pedido", (string)null);
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Carrito", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Recetum", "Receta")
                        .WithMany("Carritos")
                        .HasForeignKey("RecetaId")
                        .IsRequired()
                        .HasConstraintName("FK__carrito__receta___75A278F5");

                    b.HasOne("FarolitoAPIs.Models.Usuario", "Usuario")
                        .WithMany("Carritos")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__carrito__usuario__76969D2E");

                    b.Navigation("Receta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Comentarios", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Componentesrecetum", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Componente", "Componentes")
                        .WithMany("Componentesreceta")
                        .HasForeignKey("ComponentesId")
                        .IsRequired()
                        .HasConstraintName("FK__component__compo__6754599E");

                    b.HasOne("FarolitoAPIs.Models.Recetum", "Receta")
                        .WithMany("Componentesreceta")
                        .HasForeignKey("RecetaId")
                        .IsRequired()
                        .HasConstraintName("FK__component__recet__66603565");

                    b.Navigation("Componentes");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Compra", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Usuario", "Usuario")
                        .WithMany("Compras")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__compra__usuario___3F466844");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Detallecompra", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Compra", "Compra")
                        .WithMany("Detallecompras")
                        .HasForeignKey("CompraId")
                        .IsRequired()
                        .HasConstraintName("FK__detalleco__compr__4222D4EF");

                    b.Navigation("Compra");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Detalleproduccion", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Inventariocomponente", "Inventariocomponentes")
                        .WithMany("Detalleproduccions")
                        .HasForeignKey("InventariocomponentesId")
                        .IsRequired()
                        .HasConstraintName("FK__detallepr__inven__59063A47");

                    b.HasOne("FarolitoAPIs.Models.Produccion", "Produccion")
                        .WithMany("Detalleproduccions")
                        .HasForeignKey("ProduccionId")
                        .IsRequired()
                        .HasConstraintName("FK__detallepr__produ__5812160E");

                    b.Navigation("Inventariocomponentes");

                    b.Navigation("Produccion");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Detalleventum", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Inventariolampara", "Inventariolampara")
                        .WithMany("Detalleventa")
                        .HasForeignKey("InventariolamparaId")
                        .IsRequired()
                        .HasConstraintName("FK__detalleve__inven__6383C8BA");

                    b.HasOne("FarolitoAPIs.Models.Ventum", "Venta")
                        .WithMany("Detalleventa")
                        .HasForeignKey("VentaId")
                        .IsRequired()
                        .HasConstraintName("FK__detalleve__venta__628FA481");

                    b.Navigation("Inventariolampara");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.HistorialComunicacion", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Usuario", "usuario")
                        .WithMany("HistorialComunicaciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__HistorialComunicacion__Usuario");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Inventariocomponente", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Componente", "Componentes")
                        .WithMany("Inventariocomponentes")
                        .HasForeignKey("ComponentesId")
                        .IsRequired()
                        .HasConstraintName("FK__inventari__compo__5441852A");

                    b.HasOne("FarolitoAPIs.Models.Detallecompra", "Detallecompra")
                        .WithMany("Inventariocomponentes")
                        .HasForeignKey("DetallecompraId")
                        .IsRequired()
                        .HasConstraintName("FK__inventari__detal__5535A963");

                    b.HasOne("FarolitoAPIs.Models.Proveedor", "Proveedor")
                        .WithMany("Inventariocomponentes")
                        .HasForeignKey("ProveedorId")
                        .IsRequired()
                        .HasConstraintName("FK__inventari__prove__534D60F1");

                    b.Navigation("Componentes");

                    b.Navigation("Detallecompra");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Inventariolampara", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Produccion", "Produccion")
                        .WithMany("Inventariolamparas")
                        .HasForeignKey("ProduccionId")
                        .IsRequired()
                        .HasConstraintName("FK__inventari__produ__5FB337D6");

                    b.HasOne("FarolitoAPIs.Models.Recetum", "Receta")
                        .WithMany("Inventariolamparas")
                        .HasForeignKey("RecetaId")
                        .IsRequired()
                        .HasConstraintName("FK__inventari__recet__5EBF139D");

                    b.Navigation("Produccion");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Logs", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Modulo", "Modulo")
                        .WithMany("Logs")
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarolitoAPIs.Models.Usuario", "Usuario")
                        .WithMany("Logs")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modulo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Mermacomponente", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Inventariocomponente", "Inventariocomponentes")
                        .WithMany("Mermacomponentes")
                        .HasForeignKey("InventariocomponentesId")
                        .IsRequired()
                        .HasConstraintName("FK__mermacomp__inven__6EF57B66");

                    b.HasOne("FarolitoAPIs.Models.Usuario", "Usuario")
                        .WithMany("Mermacomponentes")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__mermacomp__usuar__6E01572D");

                    b.Navigation("Inventariocomponentes");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Mermalampara", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Inventariolampara", "Inventariolampara")
                        .WithMany("Mermalamparas")
                        .HasForeignKey("InventariolamparaId")
                        .IsRequired()
                        .HasConstraintName("FK__mermalamp__inven__6B24EA82");

                    b.HasOne("FarolitoAPIs.Models.Usuario", "Usuario")
                        .WithMany("Mermalamparas")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__mermalamp__usuar__6A30C649");

                    b.Navigation("Inventariolampara");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Produccion", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Solicitudproduccion", "Solicitudproduccion")
                        .WithMany("Produccions")
                        .HasForeignKey("SolicitudproduccionId")
                        .IsRequired()
                        .HasConstraintName("FK__produccio__solic__4BAC3F29");

                    b.HasOne("FarolitoAPIs.Models.Usuario", "Usuario")
                        .WithMany("Produccions")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__produccio__usuar__4AB81AF0");

                    b.Navigation("Solicitudproduccion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Productoproveedor", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Componente", "Componentes")
                        .WithMany("Productoproveedors")
                        .HasForeignKey("ComponentesId")
                        .IsRequired()
                        .HasConstraintName("FK__productop__compo__72C60C4A");

                    b.HasOne("FarolitoAPIs.Models.Proveedor", "Proveedor")
                        .WithMany("Productoproveedors")
                        .HasForeignKey("ProveedorId")
                        .IsRequired()
                        .HasConstraintName("FK__productop__prove__71D1E811");

                    b.Navigation("Componentes");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Solicitudproduccion", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Recetum", "Receta")
                        .WithMany("Solicitudproduccions")
                        .HasForeignKey("RecetaId")
                        .IsRequired()
                        .HasConstraintName("FK__solicitud__recet__46E78A0C");

                    b.HasOne("FarolitoAPIs.Models.Usuario", "Usuario")
                        .WithMany("Solicitudproduccions")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__solicitud__usuar__47DBAE45");

                    b.Navigation("Receta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Ventum", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Usuario", "Usuario")
                        .WithMany("Venta")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__venta__usuario_i__5BE2A6F2");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarolitoAPIs.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pedido", b =>
                {
                    b.HasOne("FarolitoAPIs.Models.Usuario", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId");

                    b.HasOne("FarolitoAPIs.Models.Ventum", "Ventum")
                        .WithOne("Pedido")
                        .HasForeignKey("Pedido", "VentumId")
                        .IsRequired()
                        .HasConstraintName("FK__pedido__venta__12345678");

                    b.Navigation("Ventum");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Componente", b =>
                {
                    b.Navigation("Componentesreceta");

                    b.Navigation("Inventariocomponentes");

                    b.Navigation("Productoproveedors");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Compra", b =>
                {
                    b.Navigation("Detallecompras");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Detallecompra", b =>
                {
                    b.Navigation("Inventariocomponentes");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Inventariocomponente", b =>
                {
                    b.Navigation("Detalleproduccions");

                    b.Navigation("Mermacomponentes");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Inventariolampara", b =>
                {
                    b.Navigation("Detalleventa");

                    b.Navigation("Mermalamparas");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Modulo", b =>
                {
                    b.Navigation("Logs");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Produccion", b =>
                {
                    b.Navigation("Detalleproduccions");

                    b.Navigation("Inventariolamparas");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Proveedor", b =>
                {
                    b.Navigation("Inventariocomponentes");

                    b.Navigation("Productoproveedors");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Recetum", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("Componentesreceta");

                    b.Navigation("Inventariolamparas");

                    b.Navigation("Solicitudproduccions");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Solicitudproduccion", b =>
                {
                    b.Navigation("Produccions");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Usuario", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("Compras");

                    b.Navigation("HistorialComunicaciones");

                    b.Navigation("Logs");

                    b.Navigation("Mermacomponentes");

                    b.Navigation("Mermalamparas");

                    b.Navigation("Pedidos");

                    b.Navigation("Produccions");

                    b.Navigation("Solicitudproduccions");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("FarolitoAPIs.Models.Ventum", b =>
                {
                    b.Navigation("Detalleventa");

                    b.Navigation("Pedido")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
